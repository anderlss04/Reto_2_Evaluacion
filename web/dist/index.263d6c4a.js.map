{"mappings":"AAAA,IAAI,UAAU,EAAE;AAChB,IAAI,eAAe,CAAC;AACpB,IAAI,WAAW,EAAE;AACjB,IAAI,SAAS,EAAE;AACf,IAAI,YAAY,IAAI;AAEpB,SAAS,aAAa,SAAS,EAAE;IAC7B,MAAM,QAAQ,IAAI;IAClB,OAAQ;QACJ,KAAK;YACD,OAAO,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG;QACxC,KAAK;YACD,MAAM,OAAO,CAAC,MAAM,OAAO,KAAK;YAChC,OAAO,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG;QACxC,KAAK;YACD,MAAM,QAAQ,CAAC,MAAM,QAAQ,KAAK;YAClC,OAAO,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG;QACxC,KAAK;YACD,MAAM,WAAW,CAAC,MAAM,WAAW,KAAK;YACxC,OAAO,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG;QACxC;YACI,OAAO,IAAI;IACnB;AACJ;AAEA,eAAe,eAAe;IAC1B,UAAU,EAAE;IACZ,SAAS,EAAE;IAEX,IAAI,UAAU,aAAa,OAAO,CAAC;IAEnC,SAAS,IAAI,CAAC;IAEd,IAAI,SAAS,SAAS,cAAc,CAAC;IACrC,IAAI,YAAY,OAAO,KAAK;IAC5B,IAAI,QAAQ,aAAa;IAEzB,eAAe,MAAM,cAAc,UAAU,OAAO,IAAI;IAExD,aAAa,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAS;QACpC,QAAQ,IAAI,CAAC,WAAW,KAAK,MAAM;QACnC,OAAO,IAAI,CAAC,cAAc,OAAO,KAAK,IAAI,GAAG,KAAK,KAAK;IAC3D;IAEA;AAEJ;AAEA,SAAS,kBAAkB;IACvB,MAAM,OAAO;QACT,QAAQ;QACR,UAAU;YACN;gBACI,OAAO,QAAQ,CAAC,EAAE;gBAClB,iBAAiB;gBACjB,aAAa;gBACb,OAAO;gBACP,aAAa;gBACb,sBAAsB;gBACtB,kBAAkB;gBAClB,MAAM;gBACN,MAAM,IAAI;gBACV,aAAa;gBACb,aAAa;YACjB;SACH;IACL;IAEA,MAAM,kBAAkB;QACpB,MAAM;QACN;QACA,SAAS;YACL,YAAY,IAAI;YAChB,qBAAqB,IAAI;YACzB,QAAQ;gBACJ,QAAQ;oBACJ,WAAW;oBACX,UAAU;oBACV,SAAS;gBACb;YACJ;YACA,QAAQ;gBAAC;gBAAa;gBAAY;gBAAS;gBAAc;aAAY;YACrE,aAAa;gBACT,MAAM;gBACN,WAAW,KAAK;YACpB;YACA,OAAO;gBACH,SAAS,IAAI;gBACb,MAAM,CAAC,kBAAkB,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACxC,WAAW;gBACX,UAAU;gBACV,SAAS;YACb;YACA,QAAQ;gBACJ,OAAO;oBAAC;wBACJ,OAAO;4BACH,WAAW;wBACf;wBACA,WAAW;4BACP,OAAO;wBACX;oBACJ;iBAAE;gBACF,OAAO;oBAAC;wBACJ,OAAO;4BACH,WAAW;wBACf;wBACA,WAAW;4BACP,OAAO;wBACX;oBACJ;iBAAE;YACN;YACA,UAAU;gBACN,iBAAiB;gBACjB,gBAAgB;gBAChB,eAAe;gBACf,eAAe;gBACf,cAAc;gBACd,UAAU;gBACV,UAAU;gBACV,cAAc;gBACd,MAAM;gBACN,WAAW,IAAI;YACnB;YACA,SAAQ;gBACJ,MAAM;gBACN,WAAW,KAAK;YACpB;YACA,SAAS;gBACL,QAAQ;oBACJ,SAAS,IAAI;oBACb,QAAQ;wBACJ,OAAO;oBACX;gBAEJ;YACJ;QACJ;IACJ;IAMA,IAAI,WACA,UAAU,OAAO;IAErB,YAAY,IAAI,MACZ,SAAS,cAAc,CAAC,SAAS,UAAU,CAAC,OAC5C;AAGR","sources":["OneDrive/Documentos/escuela/2DAW3/proyecto_2evaluacion/web/src/js/graficos.js"],"sourcesContent":["let precios = [];\r\nlet datosGrafico = {};\r\nlet empresas = [];\r\nlet labels = [];\r\nvar chartLine = null;\r\n\r\nfunction obtenerFecha(intervalo) {\r\n    const fecha = new Date();\r\n    switch (intervalo) {\r\n        case '1d':\r\n            return fecha.toISOString().slice(0, 10);\r\n        case '1w':\r\n            fecha.setDate(fecha.getDate() - 7);\r\n            return fecha.toISOString().slice(0, 10);\r\n        case '1m':\r\n            fecha.setMonth(fecha.getMonth() - 1);\r\n            return fecha.toISOString().slice(0, 10);\r\n        case '1y':\r\n            fecha.setFullYear(fecha.getFullYear() - 1);\r\n            return fecha.toISOString().slice(0, 10);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nasync function crearGrafico() {\r\n    precios = [];\r\n    labels = [];\r\n    \r\n    let empresa = localStorage.getItem('grafico');\r\n\r\n    empresas.push(empresa);\r\n\r\n    let select = document.getElementById('intervalo-select')\r\n    let intervalo = select.value;\r\n    let fecha = obtenerFecha(intervalo);\r\n\r\n    datosGrafico = await apiPeticiones(empresas, fecha, null);\r\n\r\n    datosGrafico.Empresas.forEach((dato) => {\r\n        precios.push(parseFloat(dato.cierre));\r\n        labels.push(intervalo === '1d' ? dato.hora : dato.fecha);\r\n    });\r\n\r\n    escribirGrafico();\r\n    \r\n}\r\n\r\nfunction escribirGrafico() {\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: empresas[0],\r\n                backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n                borderColor: \"hsl(180, 100%, 50%)\",\r\n                color: 'white',\r\n                pointRadius: 0,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                data: precios,\r\n                fill: true,\r\n                borderWidth: 0,\r\n                lineTension: 0,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const configLineChart = {\r\n        type: \"line\",\r\n        data,\r\n        options: {\r\n            responsive: true,\r\n            maintainAspectRatio: true,\r\n            legend: {\r\n                labels: {\r\n                    fontColor: 'black',\r\n                    fontSize: 14,\r\n                    padding: 20\r\n                }\r\n            },\r\n            events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n            interaction: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: `Precios de hoy de ${empresas[0]}`,\r\n                fontColor: 'black',\r\n                fontSize: 20,\r\n                padding: 20\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: 'black'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255, 255, 255, 0.5)'\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: 'black'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255, 255, 255, 0.5)'\r\n                    }\r\n                }]\r\n            },\r\n            tooltips: {\r\n                backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n                titleFontColor: 'black',\r\n                titleFontSize: 14,\r\n                bodyFontColor: 'black',\r\n                bodyFontSize: 14,\r\n                xPadding: 10,\r\n                yPadding: 10,\r\n                cornerRadius: 0,\r\n                mode: 'index',\r\n                intersect: true,\r\n            },\r\n            onclick:{\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    display: true,\r\n                    labels: {\r\n                        color: 'rgb(255, 99, 132)'\r\n                    },\r\n                    \r\n                }\r\n            },\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    if (chartLine) {\r\n        chartLine.destroy();\r\n    }\r\n    chartLine = new Chart(\r\n        document.getElementById(\"chart\").getContext(\"2d\"),\r\n        configLineChart\r\n    );\r\n\r\n}\r\n"],"names":[],"version":3,"file":"index.263d6c4a.js.map","sourceRoot":"/__parcel_source_root/"}